<Window x:Class="P3.DoctorsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:P3"
        mc:Ignorable="d"
        Title="Doctor Management" SizeToContent="WidthAndHeight" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="addNewDoctorButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="addDoctorGrid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Pressed"/>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="Normal"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF079992"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF3C6382"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="ellipse" Fill="#FF38ADA9"/>
                            <Path Data="M1.616,14.306667 C27.616,14.306667 27.449333,14.306667 27.449333,14.306667" HorizontalAlignment="Left" Height="3" Margin="1.616,14.307,0,0" Stretch="Fill" VerticalAlignment="Top" Width="25.833" Stroke="White" StrokeStartLineCap="Round"/>
                            <Path Data="M1.616,14.306667 C27.616,14.306667 27.449333,14.306667 27.449333,14.306667" HorizontalAlignment="Left" Height="3" Margin="1.616,14.307,0,0" Stretch="Fill" VerticalAlignment="Top" Width="25.833" Stroke="White" RenderTransformOrigin="0.5,0.5" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="editDoctorInfoButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF82CCDD"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF82CCDD"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF82CCDD"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stroke="White"/>
                            <Path x:Name="path" Data="M13.875,4.875 L9.4375,4.875 3.875,4.875 3.875,20.5 26.875,20.5 26.875,17.916667 26.875,10.9375 26.875,10.6875 26.875,9.5 26.875,8.875" HorizontalAlignment="Left" Height="16.625" Margin="3.875,4.875,0,0" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Stroke="Black" VerticalAlignment="Top" Width="24" Fill="White"/>
                            <Path x:Name="path1" Data="M11.25,13.5 L22.1875,2.5625 24.3749,4.7499 14.124728,14.999681" HorizontalAlignment="Left" Height="13.438" Margin="11.25,2.562,0,0" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Stroke="Black" VerticalAlignment="Top" Width="14.125" Fill="White"/>
                            <Path x:Name="path2" Data="M0.93844093,0.49993108 L0.50050183,3.1250692 4.1254977,2.1255164" HorizontalAlignment="Left" Height="3.625" Margin="10.562,13.562,0,0" StrokeStartLineCap="Triangle" Stretch="None" StrokeEndLineCap="Triangle" Stroke="Black" VerticalAlignment="Top" Width="4.626" Fill="White"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="deleteRowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="deleteRowButton" Fill="#FFF4F4F5" Stroke="Black"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid  x:Name="docGrid" Width="1024" Height="576">
        <TextBlock x:Name="DoctorsTxt" HorizontalAlignment="Center" Height="75.228" TextAlignment="Center" TextWrapping="Wrap" Text="Doctors" VerticalAlignment="Top" Width="1024" Margin="0,10,0,0" FontSize="48" />
        <!--<DataGrid x:Name="doctorGrid" ColumnWidth="286" IsReadOnly="True" HorizontalAlignment="Center" Height="409.116" VerticalAlignment="Center" Width="756.424" Margin="66.46,90.228,201.116,76.656"/>-->
        <DataGrid x:Name="docListGrid" AutoGenerateColumns="False" ColumnWidth="*" IsReadOnly="True" HorizontalAlignment="Center" Height="409.116" VerticalAlignment="Center" Width="602.829" Margin="177.846,90.228,243.325,76.656">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="NameHeader" Header="Name" Binding="{Binding Name}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>

                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.CellStyle>

                </DataGridTextColumn>

                <DataGridTextColumn x:Name="DaysHeader" Header="Days" Binding="{Binding Days}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>

                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn x:Name="HoursHeader" Header="Hours" Binding="{Binding Hours}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>

                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn x:Name="editDocBttn" Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!--<Button x:Name="editBttn"  Click="edBttn_Click" Content="Edit"/>-->
                            <Button x:Name="editBttn" Click="editDoctorButton_Click" Content="Edit" Style="{DynamicResource mediButtonStyle}"/>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="addDocButton"  Cursor="Hand" Content="Button" Click="addDoctorButton_Click" HorizontalAlignment="Left" Height="30.484" Margin="867.667,468.86,0,0" Style="{DynamicResource addNewDoctorButtonStyle}" VerticalAlignment="Top" Width="29.775"/>
        <Button Content="Delete Row" Click="deleteRow_Click" HorizontalAlignment="Left" Height="51.495" Margin="853.5,148,0,0" Style="{DynamicResource mediButtonStyle}" VerticalAlignment="Top" Width="94.5"/>
        <!--<Button x:Name="editDoctorButton" HorizontalAlignment="Left" Click="editDoctorButton_Click" Height="26.36" Margin="867.667,90.228,0,0" Style="{DynamicResource editDoctorInfoButton}" VerticalAlignment="Top" Width="34.659" Cursor="Hand" />-->

    </Grid>
</Window>
